using Logic;
using Logic.SimplifiedModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace GUI.EditDeleteWindows
{
    /// <summary>
    /// Логика взаимодействия для EditDeleteAuthorsWindow.xaml
    /// </summary>
    public partial class EditDeleteAuthorsWindow : Window
    {
        public SimplifiedContext DB { get; set; }

        int selectedIndex=0;

        public EditDeleteAuthorsWindow(IContext context)
        {
            InitializeComponent();

            DB = context as SimplifiedContext;

            // Define the query expression.
            var outputQuery =
                from author in DB.Authors
                select new { AuthorID = author.AuthorID, Name = author.Name, Surname = author.Surname, Patronymic = author.Patronymic };

            AuthorsDataGrid.ItemsSource = outputQuery;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            var button = sender as Button;
            var tag = button.Tag as string;
            var tagInt = Convert.ToInt32(tag);
            switch (tagInt)
            {
                case 0:
                    //Нажата кнопка "Сохранить изменения"
                    if (selectedIndex != -1)
                    {
                        if (DB.Authors[selectedIndex].Name != NameTextBox.Text)
                            DB.Authors[selectedIndex].Name = NameTextBox.Text;
                        if (DB.Authors[selectedIndex].Surname != SurnameTextBox.Text)
                            DB.Authors[selectedIndex].Surname = SurnameTextBox.Text;
                        if (DB.Authors[selectedIndex].Patronymic != PatronymicTextBox.Text)
                            DB.Authors[selectedIndex].Patronymic = PatronymicTextBox.Text;
                        CollectionViewSource.GetDefaultView(AuthorsDataGrid.ItemsSource).Refresh();
                    }
                    break;
                case 1:
                    //Нажата кнопка "Удалить выбранного автора"
                    if (selectedIndex != -1)
                    {
                        DB.Authors.RemoveAt(selectedIndex);
                        NameTextBox.Text = "";
                        SurnameTextBox.Text = "";
                        PatronymicTextBox.Text = "";
                        CollectionViewSource.GetDefaultView(AuthorsDataGrid.ItemsSource).Refresh();
                    }
                    break;
                case 2:
                    //Нажата кнопка "Назад"
                    Close();
                    break;
            }
        }

        //Изменение заголовков столбцов таблицы:
        private void AuthorsDataGrid_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            
            string headerName = e.Column.Header.ToString();

            switch (headerName)
            {
                case "AuthorID":
                    e.Column.Header = "ID автора";
                    break;
                case "Name":
                    e.Column.Header = "Имя";
                    break;
                case "Surname":
                    e.Column.Header = "Фамилия";
                    break;
                case "Patronymic":
                    e.Column.Header = "Отчество";
                    break;
                default:
                    break;
            }
        }

        //Смена данных, отображаемых в полях для ввода текста, при смене выбранной строки в таблице:
        private void AuthorsDataGrid_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            var dataGrid = sender as DataGrid;
            selectedIndex = dataGrid.SelectedIndex;

            if (selectedIndex != -1)
            {
                NameTextBox.Text = DB.Authors[selectedIndex].Name;
                SurnameTextBox.Text = DB.Authors[selectedIndex].Surname;
                PatronymicTextBox.Text = DB.Authors[selectedIndex].Patronymic;
            }
        }
        
        //Выделить изначально выбранную строку цветом: (не работает)
        //private void AuthorsDataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        //{
        //    var dataGrid = sender as DataGrid;
        //    var selectedItem = dataGrid.SelectedItem;
        //    var selectedRow = dataGrid.ItemContainerGenerator.ContainerFromItem(selectedItem) as DataGridRow;
        //    selectedRow.Background = Brushes.Blue;
        //}
    }
}
